package mammut.topology;
option optimize_for = LITE_RUNTIME;

message GetTopology{
}

message GetTopologyRes{
    message Vcc{
        required uint32 cpu_id = 1;
        required uint32 physical_core_id = 2;
        required uint32 virtual_core_id = 3;
    }
    repeated Vcc coordinates = 1;
}

message GetCpuVendorId{
    required uint32 cpu_id = 1;
}

message GetCpuVendorIdRes{
    required string vendor_id = 1;
}

message GetCpuFamily{
    required uint32 cpu_id = 1;
}

message GetCpuFamilyRes{
    required string family = 1;
}

message GetCpuModel{
    required uint32 cpu_id = 1;
}

message GetCpuModelRes{
    required string model = 1;
}

message IsHotPluggable{
    required uint32 virtual_core_id = 1;
}

message IsHotPlugged{
    required uint32 virtual_core_id = 1;
}

message HotPlug{
    required uint32 virtual_core_id = 1;
}

message HotUnplug{
    required uint32 virtual_core_id = 1;
}

message SetUtilization{
    enum Type{
        MAXIMIZE = 0;
        RESET = 1;
    }
    enum UnitType{
        TOPOLOGY = 0;
        CPU = 1;
        PHYSICAL_CORE = 2;
        VIRTUAL_CORE = 3;
    }
    required Type type = 1;
    required UnitType unit_type = 2;
    required uint32 id = 3;
}

message GetIdleTime{
    required uint32 virtual_core_id = 1;
}

message GetIdleTimeRes{
    required uint32 idle_time = 1;
}

message ResetIdleTime{
    required uint32 virtual_core_id = 1;
}

message IdleLevelsGet{
    required uint32 virtual_core_id = 1;
}

message IdleLevelsGetRes{
    repeated uint32 level_id = 1;
}

message IdleLevelGetName{
    required uint32 virtual_core_id = 1;
    required uint32 level_id = 2;
}

message IdleLevelGetNameRes{
    required string name = 1;
}

message IdleLevelGetDesc{
    required uint32 virtual_core_id = 1;
    required uint32 level_id = 2;
}

message IdleLevelGetDescRes{
    required string description = 1;
}

message IdleLevelIsEnableable{
    required uint32 virtual_core_id = 1;
    required uint32 level_id = 2;
}

message IdleLevelIsEnabled{
    required uint32 virtual_core_id = 1;
    required uint32 level_id = 2;
}

message IdleLevelEnable{
    required uint32 virtual_core_id = 1;
    required uint32 level_id = 2;
}

message IdleLevelDisable{
    required uint32 virtual_core_id = 1;
    required uint32 level_id = 2;
}

message IdleLevelGetExitLatency{
    required uint32 virtual_core_id = 1;
    required uint32 level_id = 2;
}

message IdleLevelGetExitLatencyRes{
    required uint32 exit_latency = 1;
}

message IdleLevelGetConsumedPower{
    required uint32 virtual_core_id = 1;
    required uint32 level_id = 2;
}

message IdleLevelGetConsumedPowerRes{
    required uint32 consumed_power = 1;
}

message IdleLevelGetAbsTime{
    required uint32 virtual_core_id = 1;
    required uint32 level_id = 2;
}

message IdleLevelGetTime{
    required uint32 virtual_core_id = 1;
    required uint32 level_id = 2;
}

message IdleLevelGetTimeRes{
    required uint32 time = 1;
}

message IdleLevelResetTime{
    required uint32 virtual_core_id = 1;
    required uint32 level_id = 2;
}

message IdleLevelGetAbsCount{
    required uint32 virtual_core_id = 1;
    required uint32 level_id = 2;
}

message IdleLevelGetCount{
    required uint32 virtual_core_id = 1;
    required uint32 level_id = 2;
}

message IdleLevelGetCountRes{
    required uint32 count = 1;
}

message IdleLevelResetCount{
    required uint32 virtual_core_id = 1;
    required uint32 level_id = 2;
}

message ResultVoid{
}

message ResultDouble{
    required double result = 1;
}

message ResultBool{
    required bool result = 1;
}
